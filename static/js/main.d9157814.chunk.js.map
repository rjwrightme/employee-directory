{"version":3,"sources":["components/Header.js","components/Filter.js","components/Card.js","components/Employees.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Search","filteremployees","e","filteredList","props","employeeList","filter","employee","name","first","toLowerCase","includes","target","value","last","updateDisplayList","type","placeholder","onChange","this","React","Component","Card","src","image","alt","phone","email","dob","Employees","state","error","isLoaded","handleSort","innerText","sortAlphabetically","displayList","sortDescending","fetch","then","response","json","result","employees","results","setState","updateEmployeeList","message","id","onClick","map","picture","large","date","substr","App","list","sort","a","b","localeCompare","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9157814.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\nfunction Header() {\n  return (\n    <header className=\"header\">\n      <h1>Employee Directory</h1>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"../styles/Filter.css\";\n\nclass Search extends React.Component {\n  filteremployees = (e) => {\n    const filteredList = this.props.employeeList.filter((employee) => {\n      return (\n        employee.name.first\n          .toLowerCase()\n          .includes(e.target.value.toLowerCase()) ||\n        employee.name.last.toLowerCase().includes(e.target.value.toLowerCase())\n      );\n    });\n    this.props.updateDisplayList(filteredList);\n  };\n\n  render() {\n    return (\n      <input\n        className=\"searchBox\"\n        type=\"text\"\n        placeholder=\"Search Employees\"\n        onChange={this.filteremployees}\n      ></input>\n    );\n  }\n}\n\nexport default Search;\n","import React from \"react\";\nimport \"../styles/Card.css\";\n\nfunction Card(props) {\n  return (\n    <div className=\"card\">\n      <img src={props.image} alt={props.name + \" profile picture\"} />\n      <h3>{props.name}</h3>\n      <p>{props.phone}</p>\n      <p>{props.email}</p>\n      <p>{props.dob}</p>\n    </div>\n  );\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"./Card\";\nimport \"../styles/Employees.css\";\n\nclass Employees extends React.Component {\n  state = {\n    error: null,\n    isLoaded: false,\n  };\n\n  componentDidMount() {\n    // Make AJAX request to the Random User API to fill our app with dummy data\n    fetch(\n      \"https://randomuser.me/api/?results=200&seed=abc&inc=picture,name,phone,email,dob,nat&nat=au\"\n    )\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          const employees = result.results;\n          this.setState({\n            isLoaded: true,\n          });\n          this.props.updateEmployeeList(employees);\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      );\n  }\n\n  handleSort = (e) => {\n    if (e.target.innerText === \"˅\") {\n      e.target.innerText = \"˄\";\n      this.props.sortAlphabetically(this.props.displayList);\n    } else {\n      e.target.innerText = \"˅\";\n      this.props.sortDescending(this.props.displayList);\n    }\n  };\n\n  render() {\n    const { error, isLoaded } = this.state;\n    const displayList = this.props.displayList;\n    if (error) {\n      return (\n        <div className=\"errorBlock\">\n          Error: {error.message}. Please try refreshing the page.\n        </div>\n      );\n    } else if (!isLoaded) {\n      return <div>Loading Employees...</div>;\n    } else {\n      return (\n        <div id=\"employeeList\">\n          <div className=\"card\">\n            <h3>Profile</h3>\n            <h3>\n              Name{\" \"}\n              <span className=\"sortIcon\" onClick={this.handleSort}>\n                ˅\n              </span>\n            </h3>\n            <h3>Phone</h3>\n            <h3>Email</h3>\n            <h3>DOB</h3>\n          </div>\n          {displayList.map((employee) => (\n            <Card\n              key={employee.dob.date}\n              image={employee.picture.large}\n              name={`${employee.name.first} ${employee.name.last}`}\n              phone={employee.phone}\n              email={employee.email}\n              dob={employee.dob.date.substr(0, 10)}\n            />\n          ))}\n        </div>\n      );\n    }\n  }\n}\n\nexport default Employees;\n","import React from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport Filter from \"./components/Filter\";\nimport Employees from \"./components/Employees\";\n\nclass App extends React.Component {\n  state = {\n    employeeList: [],\n    displayList: [],\n  };\n\n  updateDisplayList = (list) => {\n    this.setState({\n      displayList: list || this.state.employeeList,\n    });\n  };\n\n  updateEmployeeList = (list) => {\n    this.setState({\n      employeeList: list,\n    });\n    this.updateDisplayList(list);\n  };\n\n  sortAlphabetically = (list) => {\n    list.sort((a, b) => a.name.first.localeCompare(b.name.first));\n    this.updateDisplayList(list);\n  };\n\n  sortDescending = (list) => {\n    list.sort((a, b) => b.name.first.localeCompare(a.name.first));\n    this.updateDisplayList(list);\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Filter\n          employeeList={this.state.employeeList}\n          updateDisplayList={this.updateDisplayList}\n        />\n        <Employees\n          employeeList={this.state.employeeList}\n          displayList={this.state.displayList}\n          updateEmployeeList={this.updateEmployeeList}\n          sortAlphabetically={this.sortAlphabetically}\n          sortDescending={this.sortDescending}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}